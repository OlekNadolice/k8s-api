 import * as k8s from "@kubernetes/client-node"
import { KubernetesClusterConfig } from "./types";


function getKubernetesProxyObject(config: KubernetesClusterConfig): k8s.CoreV1Api {
    const {clusters, users, contexts, currentContext} = config
    const kc =  new k8s.KubeConfig();
    kc.loadFromOptions({clusters, users, contexts, currentContext})
    return  kc.makeApiClient(k8s.CoreV1Api)
   
 
}

const clusters = [{
    name: 'docker-desktop',
    cluster: {
    'certificate-authority-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJS01mcVZRb3lrLzB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1qY3hPRFExTkROYUZ3MHpOVEF6TWpVeE9EUTFORE5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMxekhmTmFFeTM4K1BMSzd0cWRqejNtaUVTL0h2NXNSRUtPNndWYXNBZGI1QnhtaUFOVmNpTGRWVEsKSTlubm5FaXBQSnI1WEV2UDQzMWg4QlBGVFgyT3ZtNW51KzRuVjM4QUc2a1dXZDNlY3VKRC9XRFJIRnRZM0hPcgoraHhNNFd2RzNpWG5NN2tqczFJVGtJU09Eb3B4bnI5Vk5YbTBwWDRNeWdNVEtBaFVqSmVFU1RlUFhvOU12UWI1Cm9CRnF2M1NUZEpTalU5NXY5ZFdhVlhrN0I2aVZ3YlVKY05oa2VPM1MrUXhsNElCamF5UDladGp6TmNKa28wOFEKV0RZR0dJdG9nS2Z4cldDUFdhdmlNY0Z6MTA1Wkh6YVliSjlzc0Z0NUZuempPY2tBd3JTQ3FRZ2VGWmg4aVVyTgpaVGF1TDVVL1RyMWJqQmpSQWdlOWhTYk5YOFdiQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUUEFHTUUwSzFoZlJkWXBCSkJOaU80M0lRL2FUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlllalViNDMrcQpLbjVselFicGZYaVJUTlNmWXVHL290TkYxSVpMYkhheGQ0SUJwV1lHZjBYT1pLNWFGckMzYXBJNFdCNkI5aHVCClFEWFNhbnFsZi9rZ0dkNkR1OGlVb0Q3SVFpV004LzBLVndDUGhqRHpNZU1WUDA0UDNHUzRhYnpVcVdsNG9HbGMKcTYwcEUzOUNubURhcEpCdUZtckNNZGlLODZQdndzMUtMdkRDWStJQ0tMUUM0Q2pUdjYxTzNCWnRSaytoNldSbAo4QS80bjhoZzZiYm5YNURHMGYrRXNZL1VVUTU3SXBxQkt3eGdzbEIvc1F3bjFIaEs1Sll4U0FvaTdjZHV2YTlWCjAxYllTRTJ0enVjQXdtYTEyZnc0b3RwUlBRK1BhbmptZ0dGYmI3RHFzb2xsT3h0VTg3Q3FENjR0YUVacEpCRFIKdkp2c3BmamNLTzNpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K',
    server: 'https://127.0.0.1:6443'
    }  
}]

const contexts = [
    {
        name: "docker-desktop",
        context: {
            cluster: 'docker-desktop',
             user: 'docker-desktop'
        }
    }
]


const users = [
    {
        name: 'docker-desktop',
        user: {
            'client-certificate-data': 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJWTNEak43WnZTSWt3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1qY3hPRFExTkROYUZ3MHlOakF6TWpjeE9EUTFORE5hTURZeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sc3dHUVlEVlFRREV4SmtiMk5yWlhJdFptOXlMV1JsCmMydDBiM0F3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3pTSjJWcU41UHlqa1gKbzdrQ3Z0NWpHMjFoWmJvWk1tK0R3anNsUnQ2ZTNDcW9TSGpxM1RRQWV1OWVKNXZjSFZjQk9uMU5ISWQ0eHpncAorQ0dwaURyNjlBRW1JL1JuV1dsRFNEZXBKMmI0Y2RWYzhRK1pCd1RjbVNtajNDU3Z6YVdHbWtSSjVhZGNNWEdLCmxLeW0wYlR2MVdvZmVWK2twNVo0NDRrNEk4L290QVZ1OXI5cmVGdUh4MHc4SWNBMHZ2ZWtScUd0Mmhmc2t2QWIKbDJDWEFWNHJTREVPR1BydnlqT1AvdzBQVkpGWFQyUnlPQlZZbU1qOXcrRXZMSEY3RzdJWUpWZkc4R0ppTUdMRQo1ZkpzSG5mOTM1NDFpZXNGSVphNXYxU1U2OWE0QTNJYzhabEdUaFNISVRHSktLRGtxL1BtKzlJV1c0TEpvVDlWCkNxNW9Yc1NCQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNOEFZd1RRcldGOUYxaWtFa0UySTdqYwpoRDlwTUIwR0ExVWRFUVFXTUJTQ0VtUnZZMnRsY2kxbWIzSXRaR1Z6YTNSdmNEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBcFdaSDNSOGs2WkJONy9IZjBZb2dOY1hDbDFUR2M3b2VnZUNlSDhJWUhUWGtWSnlTYTVQRllrcjMKZFpaTGZUbE1WM3g5QlJxU3JtdDRvQ1VOTXZ5MzZIaFp3WEJuNWtVTE00WFVubHNxT3lSOFRoUU1WbWl4MGtCeQp4Y1llTHNuL1ZRZjhPVkhJSWoyTVFPS2hldjhpdjBEWnMvL3NxVGtMT2NBeU05OGRVUVd1OSs5MnhZVUZnQ2JECm84QUVZaUJkZ054V09FL2taN0FMckhNUUptUXlWa0tndVNDajl0VjJxQW5ROGdCQlhFZnZHVXBXTXJtb3B0VjEKQ3J0Tm1hZzl3ZW8rV0ZxbW1ycW10UFUvVk1EOVZxZmNBS1RicXQ4VnR2bjBIMGxKOUt1Y0dFQTB3a2p4bklQZApwUHFtUkxheVIxN1pKVG5zV0tJT3ZHR3NYcEhRbFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==',
             'client-key-data' : 'LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBczBpZGxhamVUOG81RjZPNUFyN2VZeHR0WVdXNkdUSnZnOEk3SlViZW50d3FxRWg0CjZ0MDBBSHJ2WGllYjNCMVhBVHA5VFJ5SGVNYzRLZmdocVlnNit2UUJKaVAwWjFscFEwZzNxU2RtK0hIVlhQRVAKbVFjRTNKa3BvOXdrcjgybGhwcEVTZVduWERGeGlwU3NwdEcwNzlWcUgzbGZwS2VXZU9PSk9DUFA2TFFGYnZhLwphM2hiaDhkTVBDSEFOTDczcEVhaHJkb1g3Skx3RzVkZ2x3RmVLMGd4RGhqNjc4b3pqLzhORDFTUlYwOWtjamdWCldKakkvY1BoTHl4eGV4dXlHQ1ZYeHZCaVlqQml4T1h5YkI1My9kK2VOWW5yQlNHV3ViOVVsT3ZXdUFOeUhQR1oKUms0VWh5RXhpU2lnNUt2ejV2dlNGbHVDeWFFL1ZRcXVhRjdFZ1FJREFRQUJBb0lCQVFDamw1bzd5dWg0bEVVKwpYZVhmTEgxT24rTlNJWG9McmVyMXBwRkR0WVJFSHhCSm1EL0Z4K3pBbDJ5K1ZKUXk2UTdRRHlmdzZoeHZ5QkZtCnNvVTg1aE16bE4xTGlUbGw2TDlWWnB0cm5ZbW5JSEFacTltWXdEL2ViMkFBcGt0UG8rM3JnZTdZSTFkd2w2bE0KVTllckxPWFdocjJjVkt0Q1dxM0NSNVdaaFl3Y2dFZ3hoMzNYbkZmNk4xQnZ3RkU4dkpUSkMwQ1VmVXBrY21obQpqMVJLL1FvRUpubW9OOFhLbGhBZnJ3QzV3V2dpRXZFWG9KbkhsT1gvYUpiVHVXMmM1S2dJRHp4dzNKYTFEeWxsCkhXNFRlc2p3d0dQTVBoVERjYnhtSFQ4ZmFsS3JkWGV6eUxJYlI5cUNESHlWZUs0dWFoenRsS0tmUGRSQ2FXaEcKeHZlL2FFdXhBb0dCQU1od0FEczF0bWR3VG1HYlh3T3VFWFVpQTRGSkUwVWYzWjMrSDNmOTJLN1BvMVBmWHJ2RwpjT3AvZTMxdGU1YVVqWG9xZWM2ajQyT3VZQzFGb2oxUjg0V2ZhZEQzMmxnVFhZSXVUcldaYzlFS0JickJQQmQ0Cm14T2VKa2VuT0hqNnBVMWFaYllrd0tDbkJ2a3pNME5qcHZoUmlYZW5TTmdaK1Erd3hjS3hrZHhGQW9HQkFPVDcKYjlhK24ralcxSHhXK3lVN1JXZk9jS2FmREdBS0VqREVibzBlZmx5NVFHYkhodUZ1TWJ0QTNhRHpDSnJKTjR4ZgpiU09qK3ZkRHo3NERoZ3VyeE8wdEM3Sk5WbFVIRXA0UCtzOUh2cHl1TWgxaFdVNi8vZnpLd20vWCtCVU9UQUpZClVjRG84VXZRdzV4MkN0dFBSQmdWTXJpN3VXSUVkM1E5NHhNM1hoRU5Bb0dBQmxmVkNncW5IUnJtd0J3RW83OHMKZWtKN1Rlb2NIQUhvSjRuVlFSemRjSnJObG1mcFBaUUlHc095Q3NRZU55TzRYbmRkcDNaMFNjRkk5ZVhRUHBTTApXbDB6SWhQVjZ4ZWh5KzdmT3N3Q2FFa2k2VWdZT0wzdVdtNlUwNHV0TTlicXlFbm1FaCtUb1FIb0xKYThOcE8rCnd2a0JtckhHa21Bd0M1a1NpUmpKZnVrQ2dZQmNoNnBxK2I3K3hRazZjWit0TE9WZ0RGRURVOVFaWHhoNHNuZ0YKK0tPUmJwNnlxY0E4aWwzNFVENy9FaGFSRGV5dmdjUkZtYmNKZ2xLSmN6MFFyRW00bWZKWEM5OXVIcHlNV09LKwpMank5YmJyOG1tRVBiSkFEUGlBU09CQ2MyWmtuZlc4VDZFM1JtRHZqbHVQT09ackhySkZCaTBKZmRIU2MrWUV3Ck83aDhaUUtCZ1FDWG9wQ1phaUVkWDY4S0RSc0RySEJoN3NEdlFBNlZKSWlsZGVDeEZNVVJQNnZHNUh0QlU5ajQKU0o2UUVRd2EyT08vTkhiMFdKZXh3ck1BZ0FQNW14alJKeGtrRWNsdlBOQ3FRQlRCdzlzRW82SWM3aFc1c3pHcQpVZEFlT3QyRkt6NXZsSU5QWE1WdGtSNkhTdnFHeEVwNWFDQW1PWmpodHVFOUx2RDBGb2dDNXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo='
        }
    }
]

const currentContext = 'docker-desktop'


const client = getKubernetesProxyObject({clusters , users, contexts, currentContext})
console.log(client)

